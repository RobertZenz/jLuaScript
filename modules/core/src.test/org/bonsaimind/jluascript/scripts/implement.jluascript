-- Licensed under Creative Commons Zero or as Public Domain.


-- This script tests the implementation of interfaces.

import("java.lang.Runnable")
import("java.util.function.BiFunction")

local ran = false

local RunnableImpl = Runnable.implement({
	run = function()
		ran = true
	end
})

local runnable = RunnableImpl.new()

runnable:run()

if ran == false then
	error("The run method was not executed.")
end

-- Now we test the direct implementation.
ran = false

runnable = Runnable.implementNew({
	run = function()
		ran = true
	end
})

runnable:run()

if ran == false then
	error("The run method was not executed.")
end

-- Now we test the error behavior.
runnable = Runnable.implementNew({})

if pcall(function() runnable:run() end) then
	error("run() could be executed without an implementation.")
end

-- Now we test the shortcut functionality.
ran = false;
runnable = Runnable.implementNew(function()
	ran = true
end)

runnable:run()

if ran == false then
	error("The run method was not executed.")
end

local a = "a"
local b = "b"

-- Now we will test if calling with parameters works.
local operation = BiFunction.implementNew(function(paramA, paramB)
		if paramA ~= a then
			error("paramA was was expected to be <" .. a .. "> but was <" .. paramA .. ">")
		end
		
		if paramB ~= b then
			error("paramB was was expected to be <" .. b .. "> but was <" .. paramB .. ">")
		end
		
		return true
	end)

local result = operation:apply(a, b)

if result ~= true then
	error("Operation should have returned <true> but was <" .. result .. ">")
end
